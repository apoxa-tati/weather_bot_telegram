import asyncio
import logging
from threading import Thread
import time

from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.filters import Command
from bot.handlers import handlers
from config import PORT, TG_KEY
from web.flask_app import flask_app, run_flask


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


def setup_handlers(dp: Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    # –ö–æ–º–∞–Ω–¥—ã
    dp.message.register(handlers.cmd_start, Command("start"))
    dp.message.register(handlers.cmd_help, Command("help"))
    dp.message.register(handlers.cmd_weather, Command("weather"))
    dp.message.register(handlers.cmd_city, Command("city"))

    # –ö–Ω–æ–ø–∫–∏
    dp.message.register(
        handlers.weather_spb, lambda message: message.text == "üå§ –ü–æ–≥–æ–¥–∞ –≤ –°–ü–±"
    )
    dp.message.register(
        handlers.help_button, lambda message: message.text == "‚ùì –ü–æ–º–æ—â—å"
    )
    dp.message.register(
        handlers.change_city_button, lambda message: message.text == "üèô –°–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥"
    )

    # –ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç (–≥–æ—Ä–æ–¥–∞)
    dp.message.register(handlers.handle_city_input)


async def start_bot():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Telegram –±–æ—Ç–∞"""
    logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞...")

    bot = Bot(token=TG_KEY, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
    dp = Dispatcher()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    setup_handlers(dp)

    logger.info("–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
    try:
        await dp.start_polling(bot, skip_updates=True)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        raise


def run_bot():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º event loop"""
    asyncio.run(start_bot())


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    time.sleep(2)

    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ –∫–∞–∫ –¥–µ–º–æ–Ω–∞
    flask_thread = Thread(target=lambda: run_flask(flask_app, PORT), daemon=True)
    flask_thread.start()

    logger.info(f"Flask –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {PORT} –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ")
    logger.info("–ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ...")

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    run_bot()


if __name__ == "__main__":
    main()
